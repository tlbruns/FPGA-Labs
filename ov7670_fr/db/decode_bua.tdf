--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1656w[1..0]	: WIRE;
	w_anode1665w[3..0]	: WIRE;
	w_anode1682w[3..0]	: WIRE;
	w_anode1692w[3..0]	: WIRE;
	w_anode1702w[3..0]	: WIRE;
	w_anode1712w[3..0]	: WIRE;
	w_anode1722w[3..0]	: WIRE;
	w_anode1732w[3..0]	: WIRE;
	w_anode1742w[3..0]	: WIRE;
	w_anode1754w[1..0]	: WIRE;
	w_anode1761w[3..0]	: WIRE;
	w_anode1772w[3..0]	: WIRE;
	w_anode1782w[3..0]	: WIRE;
	w_anode1792w[3..0]	: WIRE;
	w_anode1802w[3..0]	: WIRE;
	w_anode1812w[3..0]	: WIRE;
	w_anode1822w[3..0]	: WIRE;
	w_anode1832w[3..0]	: WIRE;
	w_data1654w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1832w[3..3], w_anode1822w[3..3], w_anode1812w[3..3], w_anode1802w[3..3], w_anode1792w[3..3], w_anode1782w[3..3], w_anode1772w[3..3], w_anode1761w[3..3]), ( w_anode1742w[3..3], w_anode1732w[3..3], w_anode1722w[3..3], w_anode1712w[3..3], w_anode1702w[3..3], w_anode1692w[3..3], w_anode1682w[3..3], w_anode1665w[3..3]));
	w_anode1656w[] = ( (w_anode1656w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1665w[] = ( (w_anode1665w[2..2] & (! w_data1654w[2..2])), (w_anode1665w[1..1] & (! w_data1654w[1..1])), (w_anode1665w[0..0] & (! w_data1654w[0..0])), w_anode1656w[1..1]);
	w_anode1682w[] = ( (w_anode1682w[2..2] & (! w_data1654w[2..2])), (w_anode1682w[1..1] & (! w_data1654w[1..1])), (w_anode1682w[0..0] & w_data1654w[0..0]), w_anode1656w[1..1]);
	w_anode1692w[] = ( (w_anode1692w[2..2] & (! w_data1654w[2..2])), (w_anode1692w[1..1] & w_data1654w[1..1]), (w_anode1692w[0..0] & (! w_data1654w[0..0])), w_anode1656w[1..1]);
	w_anode1702w[] = ( (w_anode1702w[2..2] & (! w_data1654w[2..2])), (w_anode1702w[1..1] & w_data1654w[1..1]), (w_anode1702w[0..0] & w_data1654w[0..0]), w_anode1656w[1..1]);
	w_anode1712w[] = ( (w_anode1712w[2..2] & w_data1654w[2..2]), (w_anode1712w[1..1] & (! w_data1654w[1..1])), (w_anode1712w[0..0] & (! w_data1654w[0..0])), w_anode1656w[1..1]);
	w_anode1722w[] = ( (w_anode1722w[2..2] & w_data1654w[2..2]), (w_anode1722w[1..1] & (! w_data1654w[1..1])), (w_anode1722w[0..0] & w_data1654w[0..0]), w_anode1656w[1..1]);
	w_anode1732w[] = ( (w_anode1732w[2..2] & w_data1654w[2..2]), (w_anode1732w[1..1] & w_data1654w[1..1]), (w_anode1732w[0..0] & (! w_data1654w[0..0])), w_anode1656w[1..1]);
	w_anode1742w[] = ( (w_anode1742w[2..2] & w_data1654w[2..2]), (w_anode1742w[1..1] & w_data1654w[1..1]), (w_anode1742w[0..0] & w_data1654w[0..0]), w_anode1656w[1..1]);
	w_anode1754w[] = ( (w_anode1754w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1761w[] = ( (w_anode1761w[2..2] & (! w_data1654w[2..2])), (w_anode1761w[1..1] & (! w_data1654w[1..1])), (w_anode1761w[0..0] & (! w_data1654w[0..0])), w_anode1754w[1..1]);
	w_anode1772w[] = ( (w_anode1772w[2..2] & (! w_data1654w[2..2])), (w_anode1772w[1..1] & (! w_data1654w[1..1])), (w_anode1772w[0..0] & w_data1654w[0..0]), w_anode1754w[1..1]);
	w_anode1782w[] = ( (w_anode1782w[2..2] & (! w_data1654w[2..2])), (w_anode1782w[1..1] & w_data1654w[1..1]), (w_anode1782w[0..0] & (! w_data1654w[0..0])), w_anode1754w[1..1]);
	w_anode1792w[] = ( (w_anode1792w[2..2] & (! w_data1654w[2..2])), (w_anode1792w[1..1] & w_data1654w[1..1]), (w_anode1792w[0..0] & w_data1654w[0..0]), w_anode1754w[1..1]);
	w_anode1802w[] = ( (w_anode1802w[2..2] & w_data1654w[2..2]), (w_anode1802w[1..1] & (! w_data1654w[1..1])), (w_anode1802w[0..0] & (! w_data1654w[0..0])), w_anode1754w[1..1]);
	w_anode1812w[] = ( (w_anode1812w[2..2] & w_data1654w[2..2]), (w_anode1812w[1..1] & (! w_data1654w[1..1])), (w_anode1812w[0..0] & w_data1654w[0..0]), w_anode1754w[1..1]);
	w_anode1822w[] = ( (w_anode1822w[2..2] & w_data1654w[2..2]), (w_anode1822w[1..1] & w_data1654w[1..1]), (w_anode1822w[0..0] & (! w_data1654w[0..0])), w_anode1754w[1..1]);
	w_anode1832w[] = ( (w_anode1832w[2..2] & w_data1654w[2..2]), (w_anode1832w[1..1] & w_data1654w[1..1]), (w_anode1832w[0..0] & w_data1654w[0..0]), w_anode1754w[1..1]);
	w_data1654w[2..0] = data_wire[2..0];
END;
--VALID FILE
