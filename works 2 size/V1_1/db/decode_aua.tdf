--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_aua
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3288w[2..0]	: WIRE;
	w_anode3301w[3..0]	: WIRE;
	w_anode3318w[3..0]	: WIRE;
	w_anode3328w[3..0]	: WIRE;
	w_anode3338w[3..0]	: WIRE;
	w_anode3348w[3..0]	: WIRE;
	w_anode3358w[3..0]	: WIRE;
	w_anode3368w[3..0]	: WIRE;
	w_anode3378w[3..0]	: WIRE;
	w_anode3390w[2..0]	: WIRE;
	w_anode3399w[3..0]	: WIRE;
	w_anode3410w[3..0]	: WIRE;
	w_anode3420w[3..0]	: WIRE;
	w_anode3430w[3..0]	: WIRE;
	w_anode3440w[3..0]	: WIRE;
	w_anode3450w[3..0]	: WIRE;
	w_anode3460w[3..0]	: WIRE;
	w_anode3470w[3..0]	: WIRE;
	w_anode3481w[2..0]	: WIRE;
	w_anode3490w[3..0]	: WIRE;
	w_anode3501w[3..0]	: WIRE;
	w_anode3511w[3..0]	: WIRE;
	w_anode3521w[3..0]	: WIRE;
	w_anode3531w[3..0]	: WIRE;
	w_anode3541w[3..0]	: WIRE;
	w_anode3551w[3..0]	: WIRE;
	w_anode3561w[3..0]	: WIRE;
	w_anode3572w[2..0]	: WIRE;
	w_anode3581w[3..0]	: WIRE;
	w_anode3592w[3..0]	: WIRE;
	w_anode3602w[3..0]	: WIRE;
	w_anode3612w[3..0]	: WIRE;
	w_anode3622w[3..0]	: WIRE;
	w_anode3632w[3..0]	: WIRE;
	w_anode3642w[3..0]	: WIRE;
	w_anode3652w[3..0]	: WIRE;
	w_data3286w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode3652w[3..3], w_anode3642w[3..3], w_anode3632w[3..3], w_anode3622w[3..3], w_anode3612w[3..3], w_anode3602w[3..3], w_anode3592w[3..3], w_anode3581w[3..3]), ( w_anode3561w[3..3], w_anode3551w[3..3], w_anode3541w[3..3], w_anode3531w[3..3], w_anode3521w[3..3], w_anode3511w[3..3], w_anode3501w[3..3], w_anode3490w[3..3]), ( w_anode3470w[3..3], w_anode3460w[3..3], w_anode3450w[3..3], w_anode3440w[3..3], w_anode3430w[3..3], w_anode3420w[3..3], w_anode3410w[3..3], w_anode3399w[3..3]), ( w_anode3378w[3..3], w_anode3368w[3..3], w_anode3358w[3..3], w_anode3348w[3..3], w_anode3338w[3..3], w_anode3328w[3..3], w_anode3318w[3..3], w_anode3301w[3..3]));
	w_anode3288w[] = ( (w_anode3288w[1..1] & (! data_wire[4..4])), (w_anode3288w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3301w[] = ( (w_anode3301w[2..2] & (! w_data3286w[2..2])), (w_anode3301w[1..1] & (! w_data3286w[1..1])), (w_anode3301w[0..0] & (! w_data3286w[0..0])), w_anode3288w[2..2]);
	w_anode3318w[] = ( (w_anode3318w[2..2] & (! w_data3286w[2..2])), (w_anode3318w[1..1] & (! w_data3286w[1..1])), (w_anode3318w[0..0] & w_data3286w[0..0]), w_anode3288w[2..2]);
	w_anode3328w[] = ( (w_anode3328w[2..2] & (! w_data3286w[2..2])), (w_anode3328w[1..1] & w_data3286w[1..1]), (w_anode3328w[0..0] & (! w_data3286w[0..0])), w_anode3288w[2..2]);
	w_anode3338w[] = ( (w_anode3338w[2..2] & (! w_data3286w[2..2])), (w_anode3338w[1..1] & w_data3286w[1..1]), (w_anode3338w[0..0] & w_data3286w[0..0]), w_anode3288w[2..2]);
	w_anode3348w[] = ( (w_anode3348w[2..2] & w_data3286w[2..2]), (w_anode3348w[1..1] & (! w_data3286w[1..1])), (w_anode3348w[0..0] & (! w_data3286w[0..0])), w_anode3288w[2..2]);
	w_anode3358w[] = ( (w_anode3358w[2..2] & w_data3286w[2..2]), (w_anode3358w[1..1] & (! w_data3286w[1..1])), (w_anode3358w[0..0] & w_data3286w[0..0]), w_anode3288w[2..2]);
	w_anode3368w[] = ( (w_anode3368w[2..2] & w_data3286w[2..2]), (w_anode3368w[1..1] & w_data3286w[1..1]), (w_anode3368w[0..0] & (! w_data3286w[0..0])), w_anode3288w[2..2]);
	w_anode3378w[] = ( (w_anode3378w[2..2] & w_data3286w[2..2]), (w_anode3378w[1..1] & w_data3286w[1..1]), (w_anode3378w[0..0] & w_data3286w[0..0]), w_anode3288w[2..2]);
	w_anode3390w[] = ( (w_anode3390w[1..1] & (! data_wire[4..4])), (w_anode3390w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3399w[] = ( (w_anode3399w[2..2] & (! w_data3286w[2..2])), (w_anode3399w[1..1] & (! w_data3286w[1..1])), (w_anode3399w[0..0] & (! w_data3286w[0..0])), w_anode3390w[2..2]);
	w_anode3410w[] = ( (w_anode3410w[2..2] & (! w_data3286w[2..2])), (w_anode3410w[1..1] & (! w_data3286w[1..1])), (w_anode3410w[0..0] & w_data3286w[0..0]), w_anode3390w[2..2]);
	w_anode3420w[] = ( (w_anode3420w[2..2] & (! w_data3286w[2..2])), (w_anode3420w[1..1] & w_data3286w[1..1]), (w_anode3420w[0..0] & (! w_data3286w[0..0])), w_anode3390w[2..2]);
	w_anode3430w[] = ( (w_anode3430w[2..2] & (! w_data3286w[2..2])), (w_anode3430w[1..1] & w_data3286w[1..1]), (w_anode3430w[0..0] & w_data3286w[0..0]), w_anode3390w[2..2]);
	w_anode3440w[] = ( (w_anode3440w[2..2] & w_data3286w[2..2]), (w_anode3440w[1..1] & (! w_data3286w[1..1])), (w_anode3440w[0..0] & (! w_data3286w[0..0])), w_anode3390w[2..2]);
	w_anode3450w[] = ( (w_anode3450w[2..2] & w_data3286w[2..2]), (w_anode3450w[1..1] & (! w_data3286w[1..1])), (w_anode3450w[0..0] & w_data3286w[0..0]), w_anode3390w[2..2]);
	w_anode3460w[] = ( (w_anode3460w[2..2] & w_data3286w[2..2]), (w_anode3460w[1..1] & w_data3286w[1..1]), (w_anode3460w[0..0] & (! w_data3286w[0..0])), w_anode3390w[2..2]);
	w_anode3470w[] = ( (w_anode3470w[2..2] & w_data3286w[2..2]), (w_anode3470w[1..1] & w_data3286w[1..1]), (w_anode3470w[0..0] & w_data3286w[0..0]), w_anode3390w[2..2]);
	w_anode3481w[] = ( (w_anode3481w[1..1] & data_wire[4..4]), (w_anode3481w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3490w[] = ( (w_anode3490w[2..2] & (! w_data3286w[2..2])), (w_anode3490w[1..1] & (! w_data3286w[1..1])), (w_anode3490w[0..0] & (! w_data3286w[0..0])), w_anode3481w[2..2]);
	w_anode3501w[] = ( (w_anode3501w[2..2] & (! w_data3286w[2..2])), (w_anode3501w[1..1] & (! w_data3286w[1..1])), (w_anode3501w[0..0] & w_data3286w[0..0]), w_anode3481w[2..2]);
	w_anode3511w[] = ( (w_anode3511w[2..2] & (! w_data3286w[2..2])), (w_anode3511w[1..1] & w_data3286w[1..1]), (w_anode3511w[0..0] & (! w_data3286w[0..0])), w_anode3481w[2..2]);
	w_anode3521w[] = ( (w_anode3521w[2..2] & (! w_data3286w[2..2])), (w_anode3521w[1..1] & w_data3286w[1..1]), (w_anode3521w[0..0] & w_data3286w[0..0]), w_anode3481w[2..2]);
	w_anode3531w[] = ( (w_anode3531w[2..2] & w_data3286w[2..2]), (w_anode3531w[1..1] & (! w_data3286w[1..1])), (w_anode3531w[0..0] & (! w_data3286w[0..0])), w_anode3481w[2..2]);
	w_anode3541w[] = ( (w_anode3541w[2..2] & w_data3286w[2..2]), (w_anode3541w[1..1] & (! w_data3286w[1..1])), (w_anode3541w[0..0] & w_data3286w[0..0]), w_anode3481w[2..2]);
	w_anode3551w[] = ( (w_anode3551w[2..2] & w_data3286w[2..2]), (w_anode3551w[1..1] & w_data3286w[1..1]), (w_anode3551w[0..0] & (! w_data3286w[0..0])), w_anode3481w[2..2]);
	w_anode3561w[] = ( (w_anode3561w[2..2] & w_data3286w[2..2]), (w_anode3561w[1..1] & w_data3286w[1..1]), (w_anode3561w[0..0] & w_data3286w[0..0]), w_anode3481w[2..2]);
	w_anode3572w[] = ( (w_anode3572w[1..1] & data_wire[4..4]), (w_anode3572w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3581w[] = ( (w_anode3581w[2..2] & (! w_data3286w[2..2])), (w_anode3581w[1..1] & (! w_data3286w[1..1])), (w_anode3581w[0..0] & (! w_data3286w[0..0])), w_anode3572w[2..2]);
	w_anode3592w[] = ( (w_anode3592w[2..2] & (! w_data3286w[2..2])), (w_anode3592w[1..1] & (! w_data3286w[1..1])), (w_anode3592w[0..0] & w_data3286w[0..0]), w_anode3572w[2..2]);
	w_anode3602w[] = ( (w_anode3602w[2..2] & (! w_data3286w[2..2])), (w_anode3602w[1..1] & w_data3286w[1..1]), (w_anode3602w[0..0] & (! w_data3286w[0..0])), w_anode3572w[2..2]);
	w_anode3612w[] = ( (w_anode3612w[2..2] & (! w_data3286w[2..2])), (w_anode3612w[1..1] & w_data3286w[1..1]), (w_anode3612w[0..0] & w_data3286w[0..0]), w_anode3572w[2..2]);
	w_anode3622w[] = ( (w_anode3622w[2..2] & w_data3286w[2..2]), (w_anode3622w[1..1] & (! w_data3286w[1..1])), (w_anode3622w[0..0] & (! w_data3286w[0..0])), w_anode3572w[2..2]);
	w_anode3632w[] = ( (w_anode3632w[2..2] & w_data3286w[2..2]), (w_anode3632w[1..1] & (! w_data3286w[1..1])), (w_anode3632w[0..0] & w_data3286w[0..0]), w_anode3572w[2..2]);
	w_anode3642w[] = ( (w_anode3642w[2..2] & w_data3286w[2..2]), (w_anode3642w[1..1] & w_data3286w[1..1]), (w_anode3642w[0..0] & (! w_data3286w[0..0])), w_anode3572w[2..2]);
	w_anode3652w[] = ( (w_anode3652w[2..2] & w_data3286w[2..2]), (w_anode3652w[1..1] & w_data3286w[1..1]), (w_anode3652w[0..0] & w_data3286w[0..0]), w_anode3572w[2..2]);
	w_data3286w[2..0] = data_wire[2..0];
END;
--VALID FILE
