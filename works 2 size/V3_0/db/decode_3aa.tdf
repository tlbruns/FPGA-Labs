--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=32 LPM_WIDTH=5 data eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_3aa
( 
	data[4..0]	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3666w[2..0]	: WIRE;
	w_anode3680w[3..0]	: WIRE;
	w_anode3697w[3..0]	: WIRE;
	w_anode3707w[3..0]	: WIRE;
	w_anode3717w[3..0]	: WIRE;
	w_anode3727w[3..0]	: WIRE;
	w_anode3737w[3..0]	: WIRE;
	w_anode3747w[3..0]	: WIRE;
	w_anode3757w[3..0]	: WIRE;
	w_anode3769w[2..0]	: WIRE;
	w_anode3779w[3..0]	: WIRE;
	w_anode3790w[3..0]	: WIRE;
	w_anode3800w[3..0]	: WIRE;
	w_anode3810w[3..0]	: WIRE;
	w_anode3820w[3..0]	: WIRE;
	w_anode3830w[3..0]	: WIRE;
	w_anode3840w[3..0]	: WIRE;
	w_anode3850w[3..0]	: WIRE;
	w_anode3861w[2..0]	: WIRE;
	w_anode3871w[3..0]	: WIRE;
	w_anode3882w[3..0]	: WIRE;
	w_anode3892w[3..0]	: WIRE;
	w_anode3902w[3..0]	: WIRE;
	w_anode3912w[3..0]	: WIRE;
	w_anode3922w[3..0]	: WIRE;
	w_anode3932w[3..0]	: WIRE;
	w_anode3942w[3..0]	: WIRE;
	w_anode3953w[2..0]	: WIRE;
	w_anode3963w[3..0]	: WIRE;
	w_anode3974w[3..0]	: WIRE;
	w_anode3984w[3..0]	: WIRE;
	w_anode3994w[3..0]	: WIRE;
	w_anode4004w[3..0]	: WIRE;
	w_anode4014w[3..0]	: WIRE;
	w_anode4024w[3..0]	: WIRE;
	w_anode4034w[3..0]	: WIRE;
	w_data3664w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode4034w[3..3], w_anode4024w[3..3], w_anode4014w[3..3], w_anode4004w[3..3], w_anode3994w[3..3], w_anode3984w[3..3], w_anode3974w[3..3], w_anode3963w[3..3]), ( w_anode3942w[3..3], w_anode3932w[3..3], w_anode3922w[3..3], w_anode3912w[3..3], w_anode3902w[3..3], w_anode3892w[3..3], w_anode3882w[3..3], w_anode3871w[3..3]), ( w_anode3850w[3..3], w_anode3840w[3..3], w_anode3830w[3..3], w_anode3820w[3..3], w_anode3810w[3..3], w_anode3800w[3..3], w_anode3790w[3..3], w_anode3779w[3..3]), ( w_anode3757w[3..3], w_anode3747w[3..3], w_anode3737w[3..3], w_anode3727w[3..3], w_anode3717w[3..3], w_anode3707w[3..3], w_anode3697w[3..3], w_anode3680w[3..3]));
	w_anode3666w[] = ( (w_anode3666w[1..1] & (! data_wire[4..4])), (w_anode3666w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3680w[] = ( (w_anode3680w[2..2] & (! w_data3664w[2..2])), (w_anode3680w[1..1] & (! w_data3664w[1..1])), (w_anode3680w[0..0] & (! w_data3664w[0..0])), w_anode3666w[2..2]);
	w_anode3697w[] = ( (w_anode3697w[2..2] & (! w_data3664w[2..2])), (w_anode3697w[1..1] & (! w_data3664w[1..1])), (w_anode3697w[0..0] & w_data3664w[0..0]), w_anode3666w[2..2]);
	w_anode3707w[] = ( (w_anode3707w[2..2] & (! w_data3664w[2..2])), (w_anode3707w[1..1] & w_data3664w[1..1]), (w_anode3707w[0..0] & (! w_data3664w[0..0])), w_anode3666w[2..2]);
	w_anode3717w[] = ( (w_anode3717w[2..2] & (! w_data3664w[2..2])), (w_anode3717w[1..1] & w_data3664w[1..1]), (w_anode3717w[0..0] & w_data3664w[0..0]), w_anode3666w[2..2]);
	w_anode3727w[] = ( (w_anode3727w[2..2] & w_data3664w[2..2]), (w_anode3727w[1..1] & (! w_data3664w[1..1])), (w_anode3727w[0..0] & (! w_data3664w[0..0])), w_anode3666w[2..2]);
	w_anode3737w[] = ( (w_anode3737w[2..2] & w_data3664w[2..2]), (w_anode3737w[1..1] & (! w_data3664w[1..1])), (w_anode3737w[0..0] & w_data3664w[0..0]), w_anode3666w[2..2]);
	w_anode3747w[] = ( (w_anode3747w[2..2] & w_data3664w[2..2]), (w_anode3747w[1..1] & w_data3664w[1..1]), (w_anode3747w[0..0] & (! w_data3664w[0..0])), w_anode3666w[2..2]);
	w_anode3757w[] = ( (w_anode3757w[2..2] & w_data3664w[2..2]), (w_anode3757w[1..1] & w_data3664w[1..1]), (w_anode3757w[0..0] & w_data3664w[0..0]), w_anode3666w[2..2]);
	w_anode3769w[] = ( (w_anode3769w[1..1] & (! data_wire[4..4])), (w_anode3769w[0..0] & data_wire[3..3]), B"1");
	w_anode3779w[] = ( (w_anode3779w[2..2] & (! w_data3664w[2..2])), (w_anode3779w[1..1] & (! w_data3664w[1..1])), (w_anode3779w[0..0] & (! w_data3664w[0..0])), w_anode3769w[2..2]);
	w_anode3790w[] = ( (w_anode3790w[2..2] & (! w_data3664w[2..2])), (w_anode3790w[1..1] & (! w_data3664w[1..1])), (w_anode3790w[0..0] & w_data3664w[0..0]), w_anode3769w[2..2]);
	w_anode3800w[] = ( (w_anode3800w[2..2] & (! w_data3664w[2..2])), (w_anode3800w[1..1] & w_data3664w[1..1]), (w_anode3800w[0..0] & (! w_data3664w[0..0])), w_anode3769w[2..2]);
	w_anode3810w[] = ( (w_anode3810w[2..2] & (! w_data3664w[2..2])), (w_anode3810w[1..1] & w_data3664w[1..1]), (w_anode3810w[0..0] & w_data3664w[0..0]), w_anode3769w[2..2]);
	w_anode3820w[] = ( (w_anode3820w[2..2] & w_data3664w[2..2]), (w_anode3820w[1..1] & (! w_data3664w[1..1])), (w_anode3820w[0..0] & (! w_data3664w[0..0])), w_anode3769w[2..2]);
	w_anode3830w[] = ( (w_anode3830w[2..2] & w_data3664w[2..2]), (w_anode3830w[1..1] & (! w_data3664w[1..1])), (w_anode3830w[0..0] & w_data3664w[0..0]), w_anode3769w[2..2]);
	w_anode3840w[] = ( (w_anode3840w[2..2] & w_data3664w[2..2]), (w_anode3840w[1..1] & w_data3664w[1..1]), (w_anode3840w[0..0] & (! w_data3664w[0..0])), w_anode3769w[2..2]);
	w_anode3850w[] = ( (w_anode3850w[2..2] & w_data3664w[2..2]), (w_anode3850w[1..1] & w_data3664w[1..1]), (w_anode3850w[0..0] & w_data3664w[0..0]), w_anode3769w[2..2]);
	w_anode3861w[] = ( (w_anode3861w[1..1] & data_wire[4..4]), (w_anode3861w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3871w[] = ( (w_anode3871w[2..2] & (! w_data3664w[2..2])), (w_anode3871w[1..1] & (! w_data3664w[1..1])), (w_anode3871w[0..0] & (! w_data3664w[0..0])), w_anode3861w[2..2]);
	w_anode3882w[] = ( (w_anode3882w[2..2] & (! w_data3664w[2..2])), (w_anode3882w[1..1] & (! w_data3664w[1..1])), (w_anode3882w[0..0] & w_data3664w[0..0]), w_anode3861w[2..2]);
	w_anode3892w[] = ( (w_anode3892w[2..2] & (! w_data3664w[2..2])), (w_anode3892w[1..1] & w_data3664w[1..1]), (w_anode3892w[0..0] & (! w_data3664w[0..0])), w_anode3861w[2..2]);
	w_anode3902w[] = ( (w_anode3902w[2..2] & (! w_data3664w[2..2])), (w_anode3902w[1..1] & w_data3664w[1..1]), (w_anode3902w[0..0] & w_data3664w[0..0]), w_anode3861w[2..2]);
	w_anode3912w[] = ( (w_anode3912w[2..2] & w_data3664w[2..2]), (w_anode3912w[1..1] & (! w_data3664w[1..1])), (w_anode3912w[0..0] & (! w_data3664w[0..0])), w_anode3861w[2..2]);
	w_anode3922w[] = ( (w_anode3922w[2..2] & w_data3664w[2..2]), (w_anode3922w[1..1] & (! w_data3664w[1..1])), (w_anode3922w[0..0] & w_data3664w[0..0]), w_anode3861w[2..2]);
	w_anode3932w[] = ( (w_anode3932w[2..2] & w_data3664w[2..2]), (w_anode3932w[1..1] & w_data3664w[1..1]), (w_anode3932w[0..0] & (! w_data3664w[0..0])), w_anode3861w[2..2]);
	w_anode3942w[] = ( (w_anode3942w[2..2] & w_data3664w[2..2]), (w_anode3942w[1..1] & w_data3664w[1..1]), (w_anode3942w[0..0] & w_data3664w[0..0]), w_anode3861w[2..2]);
	w_anode3953w[] = ( (w_anode3953w[1..1] & data_wire[4..4]), (w_anode3953w[0..0] & data_wire[3..3]), B"1");
	w_anode3963w[] = ( (w_anode3963w[2..2] & (! w_data3664w[2..2])), (w_anode3963w[1..1] & (! w_data3664w[1..1])), (w_anode3963w[0..0] & (! w_data3664w[0..0])), w_anode3953w[2..2]);
	w_anode3974w[] = ( (w_anode3974w[2..2] & (! w_data3664w[2..2])), (w_anode3974w[1..1] & (! w_data3664w[1..1])), (w_anode3974w[0..0] & w_data3664w[0..0]), w_anode3953w[2..2]);
	w_anode3984w[] = ( (w_anode3984w[2..2] & (! w_data3664w[2..2])), (w_anode3984w[1..1] & w_data3664w[1..1]), (w_anode3984w[0..0] & (! w_data3664w[0..0])), w_anode3953w[2..2]);
	w_anode3994w[] = ( (w_anode3994w[2..2] & (! w_data3664w[2..2])), (w_anode3994w[1..1] & w_data3664w[1..1]), (w_anode3994w[0..0] & w_data3664w[0..0]), w_anode3953w[2..2]);
	w_anode4004w[] = ( (w_anode4004w[2..2] & w_data3664w[2..2]), (w_anode4004w[1..1] & (! w_data3664w[1..1])), (w_anode4004w[0..0] & (! w_data3664w[0..0])), w_anode3953w[2..2]);
	w_anode4014w[] = ( (w_anode4014w[2..2] & w_data3664w[2..2]), (w_anode4014w[1..1] & (! w_data3664w[1..1])), (w_anode4014w[0..0] & w_data3664w[0..0]), w_anode3953w[2..2]);
	w_anode4024w[] = ( (w_anode4024w[2..2] & w_data3664w[2..2]), (w_anode4024w[1..1] & w_data3664w[1..1]), (w_anode4024w[0..0] & (! w_data3664w[0..0])), w_anode3953w[2..2]);
	w_anode4034w[] = ( (w_anode4034w[2..2] & w_data3664w[2..2]), (w_anode4034w[1..1] & w_data3664w[1..1]), (w_anode4034w[0..0] & w_data3664w[0..0]), w_anode3953w[2..2]);
	w_data3664w[2..0] = data_wire[2..0];
END;
--VALID FILE
